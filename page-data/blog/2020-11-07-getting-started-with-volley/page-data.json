{
    "componentChunkName": "component---src-pages-blog-mdx-slug-js",
    "path": "/blog/2020-11-07-getting-started-with-volley/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"hidden\": false,\n  \"title\": \"Getting Started with Volley\",\n  \"date\": \"2020-11-07\",\n  \"categories\": \"android Volley android-studio kotlin tech\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This is my very first post so bear with me, and hopefully before anyone sees this it is a solid post. Recently I started learning android and since I've been having trouble finding so good content I figured I would make some as I go. Some people would describe this as the blind leading the blind but, I beg to differ. I think that some of the best teachers are those who are still learning because they understand that it is a process. So join me and lets see if we can make it through the forest on this android adventure.\"), mdx(\"p\", null, \"So without further ado, let's get started.\"), mdx(\"p\", null, \"For this article, I will be referencing the offical documentation: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.android.com/training/volley\"\n  }, \"https://developer.android.com/training/volley\")), mdx(\"p\", null, \"My coding environment is Ubuntu 20 but you can use Windows or Mac if you like. First things first start up \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"android studio\"), \" and create a new Empty activity:\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/assets/2020-11-07-LearningVolley/EmptyActivity.png\",\n    \"alt\": \"Empty Activity\"\n  })), mdx(\"p\", null, \"Then I saved my project like this:\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/assets/2020-11-07-LearningVolley/LearningVolleySave.png\",\n    \"alt\": \"How I saved my project\"\n  })), mdx(\"p\", null, \"To import volley as the official documentation says add the following lines to your build.gradle file.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-kotlin\"\n  }, \"dependencies {\\n    ...\\n    implementation 'com.android.volley:volley:1.1.1'\\n}\\n\")), mdx(\"p\", null, \"This is all fine and dandy but they don't tell you which build.gradle file. Turns out it is the Module build.gradle. You can see it here:\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/assets/2020-11-07-LearningVolley/BuildGradle.png\",\n    \"alt\": \"The Build Gradle file\"\n  }), \"\\nOr if you don't have that Gradle Scripts Tab with the little elephant you can find the gradle file in the app directory like this:\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/assets/2020-11-07-LearningVolley/BuildGradle2.png\",\n    \"alt\": \"The Build Gradle file under the project tab\"\n  })), mdx(\"p\", null, \"Then simply paste the implementation into the build.gradle file and hit the sync now button.\"), mdx(\"p\", null, \"Now you are all set up to use volley.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Alternatively you can clone volley from github\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"$ git clone https://github.com/google/volley\\n\")), mdx(\"p\", null, \"Then you can import it into android studio by going to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"File -> New -> Import Module ...\"), \"  . Then selecting the location of the module you are importing (Volley). Then if you go to that same build.gradle file (in the module as mentioned above) and add the following line:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-kotlin\"\n  }, \"dependencies {\\n    ...\\n    implementation project(':volley')\\n}\\n\")), mdx(\"p\", null, \"Now you are all ready to make some network requests in Kotlin with Volley. But first you might want to add internet permissions I explain that in my next post.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Getting Started with Volley","date":"November 07, 2020"}}},"pageContext":{"id":"780e1dc5-99c5-551a-a444-be6a36979c13","slug":"2020-11-07-Getting-Started-with-Volley","__params":{"slug":"2020-11-07-getting-started-with-volley"}}},
    "staticQueryHashes": []}